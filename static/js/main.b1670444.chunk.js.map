{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentTime","Date","toUTCString","slice","Clock","state","today","timerId","this","window","setInterval","setState","console","info","prevProps","oldName","name","newName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleLeftClick","handleRightClick","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAON,KAFX,EAKEO,QAAyB,KAL3B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAON,MAEvBY,QAAQC,KAAR,UAAgB,EAAKR,MAAMC,UAC1B,OAZP,gCAeE,SAAmBQ,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUT,KAAKU,MAAMF,KAEvBD,IAAYE,GAEdL,QAAQO,MAAR,uBAA8BJ,EAA9B,eAA4CE,MArBlD,kCAyBE,WACMT,KAAKD,SACPE,OAAOW,cAAcZ,KAAKD,WA3BhC,oBA+BE,WACE,IAAQD,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMF,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGf,WA3CX,GAA2BgB,aCZ3B,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAU,EACVC,UAAW,WAHf,EAMEtB,QAAyB,KAN3B,EA0BEuB,gBAAkB,WAChB,EAAKnB,SAAS,CAAEiB,UAAU,KA3B9B,EA8BEG,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,UAAU,KAhC9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,MAEHW,SAASC,iBAAiB,QAAS3B,KAAKsB,iBACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,oBAdlD,kCAiBE,WACMvB,KAAKD,SACPE,OAAOW,cAAcZ,KAAKD,SAG5B2B,SAASE,oBAAoB,QAAS5B,KAAKsB,iBAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,oBAvBrD,oBAmCE,WACE,MAAgCvB,KAAKH,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WAzClC,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.b1670444.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getCurrentTime() {\n  const time = new Date();\n\n  return time.toUTCString().slice(-12, -4);\n}\n\ninterface Props {\n  name: string;\n}\n\ntype State = {\n  today: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: getCurrentTime(),\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: getCurrentTime() });\n      // eslint-disable-next-line no-console\n      console.info(`${this.state.today}`);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n  }\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}